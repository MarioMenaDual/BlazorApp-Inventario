@using Entities
@using Business

@inject NavigationManager NavManager

<div>
    <EditForm Model="oStorage">
       
        <div class="form-group">
            <label>Producto:</label>
            <InputSelect @bind-Value="oStorage.ProductId" class="form-control">
                <option value="">Seleccionar producto..</option>
                @foreach (var product in products)
                {
<option value="@product.ProductId">@product.ProductName</option>}
            </InputSelect>
        </div>


        <div class="form-group">
            <label>Almacen:</label>
            <InputSelect @bind-Value="oStorage.WarehouseId" class="form-control">
                <option value="">Seleccionar almacen..</option>
                @foreach (var warehouse in warehouses)
                {
<option value="@warehouse.WarehouseId">@warehouse.WarehouseName</option>}
            </InputSelect>
        </div>

        <input type="button" value="Agregar Almacenamiento" @onclick="SaveStorage" />
    </EditForm>
</div>
<div class="text-center h4">
    @messsage
</div>

@code { StorageEntity oStorage = new StorageEntity();
    List<ProductEntity> products = new List<ProductEntity>();
    List<WarehouseEntity> warehouses = new List<WarehouseEntity>();

    string messsage;

    protected override async Task OnInitializedAsync()
    {
        products = B_Product.ProductList();
        warehouses = B_Warehouse.WarehouseList();
    }

    private void SaveStorage()
    {

        oStorage.StorageId = $"{oStorage.WarehouseId}-{oStorage.ProductId}";

        if (!B_Storage.IsProductInWareHouse(oStorage.StorageId))
        {
            oStorage.LastUpdate = DateTime.Now;
            B_Storage.CreateStorage(oStorage);

            messsage = "Producto registrado";
        }
        else
        {
            messsage = "El producto ya existe";
        }

    } }